<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-20T13:32:46 IST" name="CombinedSuites" finished-at="2023-11-20T13:32:46 IST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- CombinedSuites -->
  <suite started-at="2023-11-20T13:26:25 IST" name="MyFIUSuite" finished-at="2023-11-20T13:32:45 IST" duration-ms="380014">
    <groups>
    </groups>
    <test started-at="2023-11-20T13:26:25 IST" name="FunctionalTests" finished-at="2023-11-20T13:32:45 IST" duration-ms="380014">
      <class name="com.testing.amazon.tests.functional.SignUpTest">
        <test-method is-config="true" signature="setUpTestData()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:25 IST" name="setUpTestData" finished-at="2023-11-20T13:26:26 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTestData -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:26 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:26:36 IST" duration-ms="10331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:36 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:26:42 IST" duration-ms="5764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithEmptyCredTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:42 IST" name="signUpWithEmptyCredTest" description="Verify that the signUp process should not proceed to next step with empty cred and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:26:42 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithEmptyCredTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithEmptyCredTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:42 IST" name="tearDownTest" finished-at="2023-11-20T13:26:43 IST" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithEmptyCredTest status=SUCCESS method=SignUpTest.signUpWithEmptyCredTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:43 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:26:52 IST" duration-ms="8573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:52 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:26:57 IST" duration-ms="5433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:57 IST" name="signUpWithInvalidEmailTest" description="Verify that the signUp process should not proceed to next step with invalid email-id and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:26:58 IST" duration-ms="495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4545df]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidEmailTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidEmailTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:58 IST" name="tearDownTest" finished-at="2023-11-20T13:26:59 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidEmailTest status=SUCCESS method=SignUpTest.signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:26:59 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:27:08 IST" duration-ms="9134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:08 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:27:10 IST" duration-ms="2091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:10 IST" name="signUpWithInvalidEmailTest" description="Verify that the signUp process should not proceed to next step with invalid email-id and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:27:11 IST" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid_email.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidEmailTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidEmailTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:11 IST" name="tearDownTest" finished-at="2023-11-20T13:27:12 IST" duration-ms="827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidEmailTest status=SUCCESS method=SignUpTest.signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:12 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:27:21 IST" duration-ms="9424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:21 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:27:34 IST" duration-ms="12972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:34 IST" name="signUpWithInvalidEmailTest" description="Verify that the signUp process should not proceed to next step with invalid email-id and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:27:35 IST" duration-ms="897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@invalidemail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidEmailTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidEmailTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:35 IST" name="tearDownTest" finished-at="2023-11-20T13:27:36 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidEmailTest status=SUCCESS method=SignUpTest.signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:36 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:27:47 IST" duration-ms="10517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:47 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:27:49 IST" duration-ms="2182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:49 IST" name="signUpWithInvalidEmailTest" description="Verify that the signUp process should not proceed to next step with invalid email-id and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:27:50 IST" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid@domain.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidEmailTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidEmailTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:50 IST" name="tearDownTest" finished-at="2023-11-20T13:27:51 IST" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidEmailTest status=SUCCESS method=SignUpTest.signUpWithInvalidEmailTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:51 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:27:59 IST" duration-ms="8697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:27:59 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:28:08 IST" duration-ms="8083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPasswordCheckTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:08 IST" name="signUpWithInvalidPasswordCheckTest" description="Verify that the signUp process should not proceed to next step with invalid re-enter password and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:28:08 IST" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Goodwill]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tamil@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456ds]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPasswordCheckTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPasswordCheckTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:08 IST" name="tearDownTest" finished-at="2023-11-20T13:28:09 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPasswordCheckTest status=SUCCESS method=SignUpTest.signUpWithInvalidPasswordCheckTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:09 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:28:18 IST" duration-ms="8762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:18 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:28:23 IST" duration-ms="5269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPasswordCheckTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:23 IST" name="signUpWithInvalidPasswordCheckTest" description="Verify that the signUp process should not proceed to next step with invalid re-enter password and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:28:24 IST" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Goodwill]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tamil@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11456dcv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11456sdcv]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPasswordCheckTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPasswordCheckTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:24 IST" name="tearDownTest" finished-at="2023-11-20T13:28:25 IST" duration-ms="799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPasswordCheckTest status=SUCCESS method=SignUpTest.signUpWithInvalidPasswordCheckTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:25 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:28:34 IST" duration-ms="9283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:34 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:28:38 IST" duration-ms="4278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPasswordTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:38 IST" name="signUpWithInvalidPasswordTest" description="Verify that the signUp process should not proceed to next step with invalid password and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:28:39 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Goodwill]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tamil@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPasswordTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPasswordTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:39 IST" name="tearDownTest" finished-at="2023-11-20T13:28:40 IST" duration-ms="829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPasswordTest status=SUCCESS method=SignUpTest.signUpWithInvalidPasswordTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:40 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:28:49 IST" duration-ms="8830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:49 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:28:55 IST" duration-ms="6465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPasswordTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:55 IST" name="signUpWithInvalidPasswordTest" description="Verify that the signUp process should not proceed to next step with invalid password and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:28:56 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Goodwill]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tamil@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPasswordTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPasswordTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:56 IST" name="tearDownTest" finished-at="2023-11-20T13:28:57 IST" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPasswordTest status=SUCCESS method=SignUpTest.signUpWithInvalidPasswordTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:28:57 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:29:06 IST" duration-ms="8875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:06 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:29:10 IST" duration-ms="4814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:10 IST" name="signUpWithInvalidPhoneNumberTest" description="Verify that the signUp process should not proceed to next step with invalid phone Number and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:29:26 IST" duration-ms="15884" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Adhithya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[+91-8485465416531]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPhoneNumberTest]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Going to next step of signUp after entering invalid Mobile number. expected [Please enter a valid mobile phone number with area code.] but found [Amazon Phone Verification]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Going to next step of signUp after entering invalid Mobile number. expected [Please enter a valid mobile phone number with area code.] but found [Amazon Phone Verification]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.testing.amazon.tests.functional.SignUpTest.signUpWithInvalidPhoneNumberTest(SignUpTest.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1275)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPhoneNumberTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:26 IST" name="tearDownTest" finished-at="2023-11-20T13:29:28 IST" duration-ms="1104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPhoneNumberTest status=FAILURE method=SignUpTest.signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:28 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:29:38 IST" duration-ms="10415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:38 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:29:41 IST" duration-ms="3145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:29:41 IST" name="signUpWithInvalidPhoneNumberTest" description="Verify that the signUp process should not proceed to next step with invalid phone Number and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:30:06 IST" duration-ms="25018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPhoneNumberTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPhoneNumberTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:30:06 IST" name="tearDownTest" finished-at="2023-11-20T13:30:07 IST" duration-ms="1119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPhoneNumberTest status=SUCCESS method=SignUpTest.signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:30:08 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:30:16 IST" duration-ms="8871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:30:16 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:30:21 IST" duration-ms="4635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:30:21 IST" name="signUpWithInvalidPhoneNumberTest" description="Verify that the signUp process should not proceed to next step with invalid phone Number and also checking that proper error message displayed." data-provider="signUpData" finished-at="2023-11-20T13:31:51 IST" duration-ms="89901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abinaya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100000000000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidPhoneNumberTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidPhoneNumberTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:31:51 IST" name="tearDownTest" finished-at="2023-11-20T13:31:52 IST" duration-ms="1211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidPhoneNumberTest status=SUCCESS method=SignUpTest.signUpWithInvalidPhoneNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:31:52 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:32:01 IST" duration-ms="8976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:01 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:32:08 IST" duration-ms="6343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidUserNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:08 IST" name="signUpWithInvalidUserNameTest" description="Verify that the signUp process should not proceed to next step with invalid user name." data-provider="signUpData" finished-at="2023-11-20T13:32:09 IST" duration-ms="1285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[â€¦]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[+15736484306]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidUserNameTest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidUserNameTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:09 IST" name="tearDownTest" finished-at="2023-11-20T13:32:10 IST" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidUserNameTest status=SUCCESS method=SignUpTest.signUpWithInvalidUserNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpBrowserTest(java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:10 IST" name="setUpBrowserTest" finished-at="2023-11-20T13:32:21 IST" duration-ms="11232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowserTest -->
        <test-method is-config="true" signature="setUpSignUpPage()[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:21 IST" name="setUpSignUpPage" finished-at="2023-11-20T13:32:24 IST" duration-ms="2789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSignUpPage -->
        <test-method signature="signUpWithInvalidUserNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:24 IST" name="signUpWithInvalidUserNameTest" description="Verify that the signUp process should not proceed to next step with invalid user name." data-provider="signUpData" finished-at="2023-11-20T13:32:44 IST" duration-ms="20063" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[+15736484306]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[signUpWithInvalidUserNameTest]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Going to next step of signUp after entering invalid user name. did not expect [Amazon Phone Verification] but found [Amazon Phone Verification]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Going to next step of signUp after entering invalid user name. did not expect [Amazon Phone Verification] but found [Amazon Phone Verification]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2198)
at com.testing.amazon.tests.functional.SignUpTest.signUpWithInvalidUserNameTest(SignUpTest.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1275)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithInvalidUserNameTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc]" started-at="2023-11-20T13:32:44 IST" name="tearDownTest" finished-at="2023-11-20T13:32:45 IST" duration-ms="1073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithInvalidUserNameTest status=FAILURE method=SignUpTest.signUpWithInvalidUserNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.testing.amazon.tests.functional.SignUpTest@24361cfc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.testing.amazon.tests.functional.SignUpTest -->
    </test> <!-- FunctionalTests -->
  </suite> <!-- MyFIUSuite -->
</testng-results>
